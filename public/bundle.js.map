{"version":3,"sources":["webpack:///webpack/bootstrap 12c5ef977b15aea899fe","webpack:///./es6/2.destructuring.js"],"names":["c","b","console","log"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACY,EAACA,GAAE,KAAH,E;KAALC,C,MAAFD,C;;;AAELE,SAAQC,GAAR,CAAYF,CAAZ;AACAC,SAAQC,GAAR,CAAYH,CAAZ,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"http://127.0.0.1:8888/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 12c5ef977b15aea899fe","/**\r\n * Created by zhaoky on 2017/1/20.\r\n */\r\n//2.变量的解构赋值\r\n\r\n//2.1数组\r\n\r\n// var [a,b,c] = [1,2,3];  //模式匹配,右边必须是数组\r\n//\r\n// let [,,d] = [1,2,3];\r\n//\r\n// let [e,...f]  = [1,2,3,4,5];\r\n//\r\n// let [g,h,...i]  = [1,2,3,4,5];\r\n//\r\n// let [j,k,...l]  = [1];\r\n\r\n// 默认值，惰性求值\r\n// let [x = 1, y = x] = [];     // x=1; y=1\r\n// let [x = 1, y = x] = [2];    // x=2; y=2\r\n// let [x = 1, y = x] = [1, 2]; // x=1; y=2\r\n// let [x = y, y = 1] = [];     // ReferenceError\r\n\r\n\r\n// console.log(a);\r\n// console.log(d);\r\n// console.log(e,f);\r\n// console.log(g,h,i);\r\n// console.log(j,k,l);\r\n\r\n//2.2对象的解构赋值\r\n//\r\n// var { bar, foo } = { foo: \"aaa\", bar: \"bbb\" };\r\n//\r\n// console.log(bar,foo);\r\n// let a = 1;\r\n// {\r\n//     let a = 2;\r\n//     console.log(a);\r\n//\r\n//    // let a = 2;\r\n//    // let a = 2;\r\n// }\r\n// console.log(a);\r\n//对象的解构赋值的内部机制，是先找到同名属性，然后再赋给对应的变量。真正被赋值的是后者，而不是前者。\r\nvar {c:b} = {c:\"111\"};\r\n\r\nconsole.log(b);\r\nconsole.log(c);\n\n\n// WEBPACK FOOTER //\n// ./es6/2.destructuring.js"],"sourceRoot":""}